basePath: /api/v1
definitions:
  dto.CreateAccountInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.CreateWorkspaceInput:
    properties:
      name:
        type: string
      user_id:
        type: string
    type: object
  dto.LoginRequestDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.LoginResponseDTO:
    properties:
      token:
        type: string
      user_id:
        type: string
    type: object
  dto.UpdateWorkspaceInput:
    properties:
      name:
        type: string
    type: object
  dto.UserOutput:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
  dto.UsersOutput:
    properties:
      users:
        items:
          $ref: '#/definitions/dto.UserOutput'
        type: array
    type: object
  dto.WorkspaceOrder:
    properties:
      sort_order:
        type: integer
      workspace_id:
        type: string
    type: object
  dto.WorkspaceOrderUpdateInput:
    properties:
      orders:
        items:
          $ref: '#/definitions/dto.WorkspaceOrder'
        type: array
    type: object
  dto.WorkspaceOutput:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.WorkspacesOutput:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.WorkspaceOutput'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for Task Estimate App.
  title: Task Estimate API
  version: "1.0"
paths:
  /health:
    get:
      description: サーバーの稼働確認用
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: ヘルスチェック
  /login:
    post:
      consumes:
      - application/json
      description: ユーザーのログイン
      parameters:
      - description: ログイン情報
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponseDTO'
        "400":
          description: リクエストが無効です
          schema:
            type: string
        "401":
          description: メールアドレスまたはパスワードが正しくありません
          schema:
            type: string
        "500":
          description: トークンの生成に失敗しました
          schema:
            type: string
      summary: ログイン
  /signup:
    post:
      consumes:
      - application/json
      description: 新しいアカウントを作成
      parameters:
      - description: アカウント作成情報
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAccountInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserOutput'
        "400":
          description: リクエストボディが無効です or メールアドレスは既に使用されています
          schema:
            type: string
      summary: アカウント作成
  /users:
    get:
      description: 全ユーザーの一覧を取得
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UsersOutput'
      summary: ユーザー一覧取得
  /users/{id}:
    get:
      description: 指定したIDのユーザー情報を取得
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserOutput'
        "404":
          description: ユーザーが見つかりません
          schema:
            type: string
      summary: ユーザー取得
  /workspaces:
    get:
      description: 全ワークスペースの一覧を取得
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WorkspacesOutput'
      summary: ワークスペース一覧取得
    post:
      consumes:
      - application/json
      description: 新しいワークスペースを作成
      parameters:
      - description: ワークスペース作成情報
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/dto.CreateWorkspaceInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.WorkspaceOutput'
        "400":
          description: リクエストボディが無効です
          schema:
            type: string
      summary: ワークスペース作成
  /workspaces/{id}:
    delete:
      description: 指定したIDのワークスペースを削除
      parameters:
      - description: ワークスペースID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: ワークスペースが見つかりません
          schema:
            type: string
      summary: ワークスペース削除
    get:
      description: 指定したIDのワークスペース情報を取得
      parameters:
      - description: ワークスペースID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WorkspaceOutput'
        "404":
          description: ワークスペースが見つかりません
          schema:
            type: string
      summary: ワークスペース取得
    put:
      consumes:
      - application/json
      description: 指定したIDのワークスペース名を更新
      parameters:
      - description: ワークスペースID
        in: path
        name: id
        required: true
        type: string
      - description: ワークスペース名
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateWorkspaceInput'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: ワークスペースが見つかりません
          schema:
            type: string
      summary: ワークスペース更新
  /workspaces/order:
    patch:
      consumes:
      - application/json
      description: ワークスペースの並び順を一括保存
      parameters:
      - description: ワークスペース並び順
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.WorkspaceOrderUpdateInput'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: リクエストボディが無効です
          schema:
            type: string
      summary: ワークスペース並び順保存
swagger: "2.0"
